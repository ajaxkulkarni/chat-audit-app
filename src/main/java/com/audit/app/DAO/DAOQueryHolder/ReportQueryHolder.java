package com.audit.app.DAO.DAOQueryHolder;

public class ReportQueryHolder {
	public static String GET_INTERVAL_DATA = "SELECT di.sId, di.startDate, di.reginterval, COUNT(*) AS `Count` FROM (SELECT Dates.sId, Dates.startDate, timeintervals.reginterval FROM (SELECT su.session_id AS sId, DATE(MIN(su.created_date)) AS startDate, TIME(MIN(su.created_date)) as startDateTime FROM chat_session AS cs INNER JOIN session_users AS su WHERE cs.id = su.session_id AND cs.status='Active' AND su.created_date < su.end_date AND cs.created_date BETWEEN '#startDate' AND '#endDate' GROUP BY su.session_id) AS Dates, timeintervals) AS di LEFT JOIN (SELECT DATE(MIN(su.created_date)) as startDate, TIME(MIN(su.created_date)) as startDateTime FROM chat_session AS cs INNER JOIN session_users AS su WHERE cs.id = su.session_id AND su.created_date < su.end_date AND cs.created_date BETWEEN '#startDate' AND '#endDate' GROUP BY su.session_id) AS Data ON di.startDate=Data.startDate AND di.reginterval=SEC_TO_TIME(TRUNCATE(TIME_TO_SEC(Data.startDateTime)/(60*30),0)*(60*30)) GROUP BY reginterval, startDate;";
	public static String GET_WORKGROUP_LOCATION_WITHOUT_USER = "SELECT distinct dept.id, dept.department_name, loc_1.location_name, loc.address, loc_1.location_description, loc.primary_contact FROM dept_location AS loc left outer join departments dept on dept.id = loc.dept_id left outer join locations loc_1 on loc_1.id = loc.location_id AND loc_1.`status` = 'A' WHERE loc.id NOT IN (SELECT usr.dept_loc_id  FROM dept_loc_users AS usr) AND dept.`status` = 'A' AND loc.`status` = 'A'";
	public static String GET_WORKGROUP_NO_LOCATION = "SELECT dept.* FROM departments AS dept WHERE dept.id NOT IN (SELECT dl.dept_id FROM dept_location AS dl WHERE dl.`status` = 'A' AND dl.location_id IS NOT NULL) AND dept.`status` = 'A'";
	public static String GET_WORKGROUP_LOCATION_WITHOUT_SKILL_MAPPING = "SELECT distinct dept.id, dept.department_name, loc_1.location_name, loc.address, loc_1.location_description, loc.primary_contact FROM dept_location AS loc left outer join departments dept on dept.id = loc.dept_id left outer join locations loc_1 on loc_1.id = loc.location_id AND loc_1.`status` = 'A' WHERE loc.id NOT IN (SELECT dc.dept_loc_id  FROM dept_skills_map AS dc WHERE dc.`status` = 'A') AND dept.`status` = 'A' AND loc.`status` = 'A'";
	public static String CHAT_GRID = "SELECT DISTINCT cs.id, DATE(cs.created_date) AS `date`, CASE DAYOFWEEK(cs.created_date) WHEN 1 THEN 'Sunday' WHEN 2 THEN 'Monday' WHEN 3 THEN 'Tuesday' WHEN 4 THEN 'Wednesday' WHEN 5 THEN 'Thursday' WHEN 6 THEN 'Friday' WHEN 7 THEN 'Saturday' ELSE NULL END AS `day`, cs.reason_id, (SELECT r.reason_name FROM reasons AS r WHERE r.id = cs.reason_id AND r.`status`='A') AS reason_name, cs.department_id, (SELECT dept.department_name FROM departments AS dept WHERE dept.id=cs.department_id AND dept.`status`='A') AS workgroup, (SELECT loc.location_name FROM locations AS loc WHERE loc.id = cs.loc_id AND loc.`status`='A') AS locationName FROM chat_session AS cs WHERE cs.`status` = 'Active' #condition GROUP BY cs.reason_id, cs.id ORDER BY cs.created_date";
	public static String GET_INTERVAL = "SELECT CAST(reginterval AS CHAR) AS reginterval FROM timeintervals;";
	public static String GET_CHAT_SESSION_IDS = "SELECT id FROM chat_session WHERE created_date BETWEEN '#startDate' AND '#endDate';";
}
