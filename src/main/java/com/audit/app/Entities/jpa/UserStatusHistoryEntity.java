/*
 * Created on 13 Jul 2017 ( Time 13:22:23 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user_status_history"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user_status_history", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserStatusHistoryEntity.countAll", query="SELECT COUNT(x) FROM UserStatusHistoryEntity x" )
} )
public class UserStatusHistoryEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Id
   	@GeneratedValue(strategy = IDENTITY)
   	@Column(name = "id", unique = true, nullable = false)
   	private int id;
    
    @Column(name="usr_sts_hist_id", nullable=false)
    private Integer    usrStsHistId ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="sts_timestamp", nullable=false)
    private Date       stsTimestamp ;

    @Column(name="user_status_id_ref", nullable=false)
    private Integer    userStatusIdRef ;

    @Column(name="status", nullable=false, length=200)
    private String     status       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserStatusHistoryEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : usr_sts_hist_id ( INT ) 
    public void setUsrStsHistId( Integer usrStsHistId ) {
        this.usrStsHistId = usrStsHistId;
    }
    public Integer getUsrStsHistId() {
        return this.usrStsHistId;
    }

    //--- DATABASE MAPPING : sts_timestamp ( TIMESTAMP ) 
    public void setStsTimestamp( Date stsTimestamp ) {
        this.stsTimestamp = stsTimestamp;
    }
    public Date getStsTimestamp() {
        return this.stsTimestamp;
    }

    //--- DATABASE MAPPING : user_status_id_ref ( INT ) 
    public void setUserStatusIdRef( Integer userStatusIdRef ) {
        this.userStatusIdRef = userStatusIdRef;
    }
    public Integer getUserStatusIdRef() {
        return this.userStatusIdRef;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append("]:"); 
        sb.append(usrStsHistId);
        sb.append("|");
        sb.append(stsTimestamp);
        sb.append("|");
        sb.append(userStatusIdRef);
        sb.append("|");
        sb.append(status);
        return sb.toString(); 
    } 

}
