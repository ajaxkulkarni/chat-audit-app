/*
 * Created on 13 Jul 2017 ( Time 13:22:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "chat_session"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="chat_session", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ChatSessionEntity.countAll", query="SELECT COUNT(x) FROM ChatSessionEntity x" )
} )
public class ChatSessionEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private long    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", nullable=false)
    private Date       createdDate  ;

    @Column(name="status", length=15)
    private String     status       ;

    @Column(name="poll_count")
    private Integer    pollCount    ;

    @Column(name="account_no", length=20)
    private String     accountNo    ;

    @Column(name="service_type", length=15)
    private String     serviceType  ;

    @Column(name="loc_id")
    private Integer    locId        ;

    @Column(name="potential_depts", length=300)
    private String     potentialDepts ;

	// "reasonId" (column "reason_id") is not defined by itself because used as FK in a link 
	// "departmentId" (column "department_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="chatSession", targetEntity=ChatMessagesEntity.class)
    private List<ChatMessagesEntity> listOfChatMessages;

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="reason_id", referencedColumnName="id")
    private ReasonsEntity reasons     ;

    @OneToMany(mappedBy="chatSession", targetEntity=SessionUsersEntity.class, fetch=FetchType.EAGER)
    private List<SessionUsersEntity> listOfSessionUsers;

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="department_id", referencedColumnName="id")
    private DepartmentsEntity departments ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ChatSessionEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( long id ) {
        this.id = id ;
    }
    public long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : created_date ( TIMESTAMP ) 
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : poll_count ( INT ) 
    public void setPollCount( Integer pollCount ) {
        this.pollCount = pollCount;
    }
    public Integer getPollCount() {
        return this.pollCount;
    }

    //--- DATABASE MAPPING : account_no ( VARCHAR ) 
    public void setAccountNo( String accountNo ) {
        this.accountNo = accountNo;
    }
    public String getAccountNo() {
        return this.accountNo;
    }

    //--- DATABASE MAPPING : service_type ( VARCHAR ) 
    public void setServiceType( String serviceType ) {
        this.serviceType = serviceType;
    }
    public String getServiceType() {
        return this.serviceType;
    }

    //--- DATABASE MAPPING : loc_id ( INT ) 
    public void setLocId( Integer locId ) {
        this.locId = locId;
    }
    public Integer getLocId() {
        return this.locId;
    }

    //--- DATABASE MAPPING : potential_depts ( VARCHAR ) 
    public void setPotentialDepts( String potentialDepts ) {
        this.potentialDepts = potentialDepts;
    }
    public String getPotentialDepts() {
        return this.potentialDepts;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfChatMessages( List<ChatMessagesEntity> listOfChatMessages ) {
        this.listOfChatMessages = listOfChatMessages;
    }
    public List<ChatMessagesEntity> getListOfChatMessages() {
        return this.listOfChatMessages;
    }

    public void setReasons( ReasonsEntity reasons ) {
        this.reasons = reasons;
    }
    public ReasonsEntity getReasons() {
        return this.reasons;
    }

    public void setListOfSessionUsers( List<SessionUsersEntity> listOfSessionUsers ) {
        this.listOfSessionUsers = listOfSessionUsers;
    }
    public List<SessionUsersEntity> getListOfSessionUsers() {
        return this.listOfSessionUsers;
    }

    public void setDepartments( DepartmentsEntity departments ) {
        this.departments = departments;
    }
    public DepartmentsEntity getDepartments() {
        return this.departments;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(createdDate);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(pollCount);
        sb.append("|");
        sb.append(accountNo);
        sb.append("|");
        sb.append(serviceType);
        sb.append("|");
        sb.append(locId);
        sb.append("|");
        sb.append(potentialDepts);
        return sb.toString(); 
    } 

}
