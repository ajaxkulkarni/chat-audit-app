/*
 * Created on 13 Jul 2017 ( Time 13:22:23 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "reason_group"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="reason_group", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ReasonGroupEntity.countAll", query="SELECT COUNT(x) FROM ReasonGroupEntity x" )
} )
public class ReasonGroupEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ReasonGroup_Id", nullable=false)
    private Integer    reasongroupId ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="ReasonGroup_Name", nullable=false, length=100)
    private String     reasongroupName ;

    @Column(name="ReasonGroup_Nickname", nullable=false, length=50)
    private String     reasongroupNickname ;

    @Column(name="status", nullable=false, length=15)
    private String     status       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", nullable=false)
    private Date       createdDate  ;

	// "reasoncategoryMapping" (column "ReasonCategory_Mapping") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="reasonGroup", targetEntity=DeptSkillsMapEntity.class)
    private List<DeptSkillsMapEntity> listOfDeptSkillsMap;

    @ManyToOne
    @JoinColumn(name="ReasonCategory_Mapping", referencedColumnName="ReasonCategory_ID")
    private ReasonCategoryEntity reasonCategory;

    @OneToMany(mappedBy="reasonGroup2", targetEntity=ReasonsEntity.class)
    private List<ReasonsEntity> listOfReasons;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ReasonGroupEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setReasongroupId( Integer reasongroupId ) {
        this.reasongroupId = reasongroupId ;
    }
    public Integer getReasongroupId() {
        return this.reasongroupId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : ReasonGroup_Name ( VARCHAR ) 
    public void setReasongroupName( String reasongroupName ) {
        this.reasongroupName = reasongroupName;
    }
    public String getReasongroupName() {
        return this.reasongroupName;
    }

    //--- DATABASE MAPPING : ReasonGroup_Nickname ( VARCHAR ) 
    public void setReasongroupNickname( String reasongroupNickname ) {
        this.reasongroupNickname = reasongroupNickname;
    }
    public String getReasongroupNickname() {
        return this.reasongroupNickname;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : created_date ( TIMESTAMP ) 
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfDeptSkillsMap( List<DeptSkillsMapEntity> listOfDeptSkillsMap ) {
        this.listOfDeptSkillsMap = listOfDeptSkillsMap;
    }
    public List<DeptSkillsMapEntity> getListOfDeptSkillsMap() {
        return this.listOfDeptSkillsMap;
    }

    public void setReasonCategory( ReasonCategoryEntity reasonCategory ) {
        this.reasonCategory = reasonCategory;
    }
    public ReasonCategoryEntity getReasonCategory() {
        return this.reasonCategory;
    }

    public void setListOfReasons( List<ReasonsEntity> listOfReasons ) {
        this.listOfReasons = listOfReasons;
    }
    public List<ReasonsEntity> getListOfReasons() {
        return this.listOfReasons;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(reasongroupId);
        sb.append("]:"); 
        sb.append(reasongroupName);
        sb.append("|");
        sb.append(reasongroupNickname);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(createdDate);
        return sb.toString(); 
    } 

}
