/*
 * Created on 13 Jul 2017 ( Time 13:22:23 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "users"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="users", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UsersEntity.countAll", query="SELECT COUNT(x) FROM UsersEntity x" )
} )
public class UsersEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", length=45)
    private String     name         ;

    @Column(name="email", length=100)
    private String     email        ;

    @Column(name="phone", length=15)
    private String     phone        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", nullable=false)
    private Date       createdDate  ;

    @Column(name="password", length=45)
    private String     password     ;

    @Column(name="status", length=15)
    private String     status       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_login")
    private Date       lastLogin    ;

    @Column(name="first_name", length=45)
    private String     firstName    ;

    @Column(name="last_name", length=45)
    private String     lastName     ;

    @Column(name="organization", length=45)
    private String     organization ;

    @Column(name="location", length=45)
    private String     location     ;

    @Column(name="address", length=245)
    private String     address      ;

    @Column(name="profile_pic", length=255)
    private String     profilePic   ;

    @Column(name="uid", length=50)
    private String     uid          ;

    @Column(name="password_reset", length=5)
    private String     passwordReset ;

	// "type" (column "type") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="type", referencedColumnName="id")
    private UserTypeEntity userType    ;

    @OneToMany(mappedBy="users", targetEntity=ChatMessagesEntity.class)
    private List<ChatMessagesEntity> listOfChatMessages;

    @OneToMany(mappedBy="users", targetEntity=SessionUsersEntity.class)
    private List<SessionUsersEntity> listOfSessionUsers;

    @OneToMany(mappedBy="users", targetEntity=NotificationsEntity.class)
    private List<NotificationsEntity> listOfNotifications;

    @OneToMany(mappedBy="users", targetEntity=UserTypeMapEntity.class)
    private List<UserTypeMapEntity> listOfUserTypeMap;

    @OneToMany(mappedBy="users", targetEntity=DeptLocUsersEntity.class)
    private List<DeptLocUsersEntity> listOfDeptLocUsers;

    @OneToMany(mappedBy="users", targetEntity=UserDepartmentEntity.class)
    private List<UserDepartmentEntity> listOfUserDepartment;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UsersEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : phone ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : created_date ( TIMESTAMP ) 
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : last_login ( DATETIME ) 
    public void setLastLogin( Date lastLogin ) {
        this.lastLogin = lastLogin;
    }
    public Date getLastLogin() {
        return this.lastLogin;
    }

    //--- DATABASE MAPPING : first_name ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : last_name ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : organization ( VARCHAR ) 
    public void setOrganization( String organization ) {
        this.organization = organization;
    }
    public String getOrganization() {
        return this.organization;
    }

    //--- DATABASE MAPPING : location ( VARCHAR ) 
    public void setLocation( String location ) {
        this.location = location;
    }
    public String getLocation() {
        return this.location;
    }

    //--- DATABASE MAPPING : address ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : profile_pic ( VARCHAR ) 
    public void setProfilePic( String profilePic ) {
        this.profilePic = profilePic;
    }
    public String getProfilePic() {
        return this.profilePic;
    }

    //--- DATABASE MAPPING : uid ( VARCHAR ) 
    public void setUid( String uid ) {
        this.uid = uid;
    }
    public String getUid() {
        return this.uid;
    }

    //--- DATABASE MAPPING : password_reset ( VARCHAR ) 
    public void setPasswordReset( String passwordReset ) {
        this.passwordReset = passwordReset;
    }
    public String getPasswordReset() {
        return this.passwordReset;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUserType( UserTypeEntity userType ) {
        this.userType = userType;
    }
    public UserTypeEntity getUserType() {
        return this.userType;
    }

    public void setListOfChatMessages( List<ChatMessagesEntity> listOfChatMessages ) {
        this.listOfChatMessages = listOfChatMessages;
    }
    public List<ChatMessagesEntity> getListOfChatMessages() {
        return this.listOfChatMessages;
    }

    public void setListOfSessionUsers( List<SessionUsersEntity> listOfSessionUsers ) {
        this.listOfSessionUsers = listOfSessionUsers;
    }
    public List<SessionUsersEntity> getListOfSessionUsers() {
        return this.listOfSessionUsers;
    }

    public void setListOfNotifications( List<NotificationsEntity> listOfNotifications ) {
        this.listOfNotifications = listOfNotifications;
    }
    public List<NotificationsEntity> getListOfNotifications() {
        return this.listOfNotifications;
    }

    public void setListOfUserTypeMap( List<UserTypeMapEntity> listOfUserTypeMap ) {
        this.listOfUserTypeMap = listOfUserTypeMap;
    }
    public List<UserTypeMapEntity> getListOfUserTypeMap() {
        return this.listOfUserTypeMap;
    }

    public void setListOfDeptLocUsers( List<DeptLocUsersEntity> listOfDeptLocUsers ) {
        this.listOfDeptLocUsers = listOfDeptLocUsers;
    }
    public List<DeptLocUsersEntity> getListOfDeptLocUsers() {
        return this.listOfDeptLocUsers;
    }

    public void setListOfUserDepartment( List<UserDepartmentEntity> listOfUserDepartment ) {
        this.listOfUserDepartment = listOfUserDepartment;
    }
    public List<UserDepartmentEntity> getListOfUserDepartment() {
        return this.listOfUserDepartment;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(createdDate);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(lastLogin);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(organization);
        sb.append("|");
        sb.append(location);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(profilePic);
        sb.append("|");
        sb.append(uid);
        sb.append("|");
        sb.append(passwordReset);
        return sb.toString(); 
    } 

}
