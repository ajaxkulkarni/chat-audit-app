/*
 * Created on 13 Jul 2017 ( Time 13:22:23 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "reason_attr_vec_mapping"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="reason_attr_vec_mapping", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ReasonAttrVecMappingEntity.countAll", query="SELECT COUNT(x) FROM ReasonAttrVecMappingEntity x" )
} )
public class ReasonAttrVecMappingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------
    @Id
   	@GeneratedValue(strategy = IDENTITY)
   	@Column(name = "id", unique = true, nullable = false)
   	private int id;
    
    
    @Column(name="rsn_attr_vec_map_id", nullable=false)
    private Integer    rsnAttrVecMapId ;

    @Column(name="reason_id_ref", nullable=false)
    private Integer    reasonIdRef  ;

    @Column(name="attribute_id_ref", nullable=false)
    private Integer    attributeIdRef ;

    @Column(name="vector_id_ref", nullable=false)
    private Integer    vectorIdRef  ;

    @Column(name="is_mandatory", nullable=false)
    private Boolean    isMandatory  ;

    @Column(name="is_active", nullable=false)
    private Boolean    isActive     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ReasonAttrVecMappingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : rsn_attr_vec_map_id ( INT ) 
    public void setRsnAttrVecMapId( Integer rsnAttrVecMapId ) {
        this.rsnAttrVecMapId = rsnAttrVecMapId;
    }
    public Integer getRsnAttrVecMapId() {
        return this.rsnAttrVecMapId;
    }

    //--- DATABASE MAPPING : reason_id_ref ( INT ) 
    public void setReasonIdRef( Integer reasonIdRef ) {
        this.reasonIdRef = reasonIdRef;
    }
    public Integer getReasonIdRef() {
        return this.reasonIdRef;
    }

    //--- DATABASE MAPPING : attribute_id_ref ( INT ) 
    public void setAttributeIdRef( Integer attributeIdRef ) {
        this.attributeIdRef = attributeIdRef;
    }
    public Integer getAttributeIdRef() {
        return this.attributeIdRef;
    }

    //--- DATABASE MAPPING : vector_id_ref ( INT ) 
    public void setVectorIdRef( Integer vectorIdRef ) {
        this.vectorIdRef = vectorIdRef;
    }
    public Integer getVectorIdRef() {
        return this.vectorIdRef;
    }

    //--- DATABASE MAPPING : is_mandatory ( BIT ) 
    public void setIsMandatory( Boolean isMandatory ) {
        this.isMandatory = isMandatory;
    }
    public Boolean getIsMandatory() {
        return this.isMandatory;
    }

    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append("]:"); 
        sb.append(rsnAttrVecMapId);
        sb.append("|");
        sb.append(reasonIdRef);
        sb.append("|");
        sb.append(attributeIdRef);
        sb.append("|");
        sb.append(vectorIdRef);
        sb.append("|");
        sb.append(isMandatory);
        sb.append("|");
        sb.append(isActive);
        return sb.toString(); 
    } 

}
