/*
 * Created on 13 Jul 2017 ( Time 13:22:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.audit.app.Entities.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "departments"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="departments", catalog="chat_data" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="DepartmentsEntity.countAll", query="SELECT COUNT(x) FROM DepartmentsEntity x" )
} )
public class DepartmentsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="department_name", length=45)
    private String     departmentName ;

    @Column(name="department_description", length=255)
    private String     departmentDescription ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", nullable=false)
    private Date       createdDate  ;

    @Column(name="status", length=15)
    private String     status       ;

    @Column(name="abbr_name", length=45)
    private String     abbrName     ;

    @Column(name="primary_contact", length=50)
    private String     primaryContact ;

    @Column(name="secondary_contact", length=50)
    private String     secondaryContact ;

    @Temporal(TemporalType.DATE)
    @Column(name="date")
    private Date       date         ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="departments", targetEntity=ChatSessionEntity.class)
    private List<ChatSessionEntity> listOfChatSession;

    @OneToMany(mappedBy="departments", targetEntity=DeptLocationEntity.class)
    private List<DeptLocationEntity> listOfDeptLocation;

    @OneToMany(mappedBy="departments", targetEntity=UserDepartmentEntity.class)
    private List<UserDepartmentEntity> listOfUserDepartment;

    @OneToMany(mappedBy="departments", targetEntity=NotificationsEntity.class)
    private List<NotificationsEntity> listOfNotifications;

    @OneToMany(mappedBy="departments", targetEntity=ReasonsEntity.class)
    private List<ReasonsEntity> listOfReasons;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public DepartmentsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : department_name ( VARCHAR ) 
    public void setDepartmentName( String departmentName ) {
        this.departmentName = departmentName;
    }
    public String getDepartmentName() {
        return this.departmentName;
    }

    //--- DATABASE MAPPING : department_description ( VARCHAR ) 
    public void setDepartmentDescription( String departmentDescription ) {
        this.departmentDescription = departmentDescription;
    }
    public String getDepartmentDescription() {
        return this.departmentDescription;
    }

    //--- DATABASE MAPPING : created_date ( TIMESTAMP ) 
    public void setCreatedDate( Date createdDate ) {
        this.createdDate = createdDate;
    }
    public Date getCreatedDate() {
        return this.createdDate;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : abbr_name ( VARCHAR ) 
    public void setAbbrName( String abbrName ) {
        this.abbrName = abbrName;
    }
    public String getAbbrName() {
        return this.abbrName;
    }

    //--- DATABASE MAPPING : primary_contact ( VARCHAR ) 
    public void setPrimaryContact( String primaryContact ) {
        this.primaryContact = primaryContact;
    }
    public String getPrimaryContact() {
        return this.primaryContact;
    }

    //--- DATABASE MAPPING : secondary_contact ( VARCHAR ) 
    public void setSecondaryContact( String secondaryContact ) {
        this.secondaryContact = secondaryContact;
    }
    public String getSecondaryContact() {
        return this.secondaryContact;
    }

    //--- DATABASE MAPPING : date ( DATE ) 
    public void setDate( Date date ) {
        this.date = date;
    }
    public Date getDate() {
        return this.date;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfChatSession( List<ChatSessionEntity> listOfChatSession ) {
        this.listOfChatSession = listOfChatSession;
    }
    public List<ChatSessionEntity> getListOfChatSession() {
        return this.listOfChatSession;
    }

    public void setListOfDeptLocation( List<DeptLocationEntity> listOfDeptLocation ) {
        this.listOfDeptLocation = listOfDeptLocation;
    }
    public List<DeptLocationEntity> getListOfDeptLocation() {
        return this.listOfDeptLocation;
    }

    public void setListOfUserDepartment( List<UserDepartmentEntity> listOfUserDepartment ) {
        this.listOfUserDepartment = listOfUserDepartment;
    }
    public List<UserDepartmentEntity> getListOfUserDepartment() {
        return this.listOfUserDepartment;
    }

    public void setListOfNotifications( List<NotificationsEntity> listOfNotifications ) {
        this.listOfNotifications = listOfNotifications;
    }
    public List<NotificationsEntity> getListOfNotifications() {
        return this.listOfNotifications;
    }

    public void setListOfReasons( List<ReasonsEntity> listOfReasons ) {
        this.listOfReasons = listOfReasons;
    }
    public List<ReasonsEntity> getListOfReasons() {
        return this.listOfReasons;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(departmentName);
        sb.append("|");
        sb.append(departmentDescription);
        sb.append("|");
        sb.append(createdDate);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(abbrName);
        sb.append("|");
        sb.append(primaryContact);
        sb.append("|");
        sb.append(secondaryContact);
        sb.append("|");
        sb.append(date);
        return sb.toString(); 
    } 

}
